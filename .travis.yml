language: python
sudo: required
# travis changes on 2017.06.21 appear to have broken pypy, causing attemtped
# downloads of "-.tar.bz2" (resulting in 'bzip2: (stdin) is not a bzip2 file.')
# (same changes MIGHT also have gotten a version of CPython 3.6 exhibiting
# https://bugs.python.org/issue29167; at least, that bug is definitely
# appearing.)
# Pinning to previous travis image for now.
group: deprecated-2017Q2
dist: trusty
cache:
  directories:
    - $HOME/.cache/pip
python:
  - "2.6"
  - "2.7"
  - "3.3"
  - "3.4"
  - "3.5"
  - "3.6"
  - "pypy"
  - "pypy3"
matrix:
  # pypy3 (as of 2.4.0) has a wacky arity issue in its source loader. Allow it
  # to fail until we can test on, and require, PyPy3.3+. See #358.
  allow_failures:
    - python: pypy3
  fast_finish: true
install:
  # For some reason Travis' build envs have wildly different pip/setuptools
  # versions between minor Python versions, and this can cause many hilarious
  # corner packaging cases. So...
  - pip install -U pip
  # Setuptools 34+ seems to get less stable
  - pip install 'setuptools>33,<34'
  # Pre-requirements sanity test (again, resembles pure, non-dev install
  # environment.) Avoids e.g. spec's 'six' from gumming up our attempts to
  # import our vendorized 'six'.
  - pip install -r tasks-requirements.txt
  - inv --list
  # Install remaining dev requirements (test runner, etc)
  - pip install -r dev-requirements.txt
  - pip list --format=columns
  # Also create a workable alt-interpreter venv for testing dual package builds
  # Python 3 is nicely namespaced, globally. Python 2 is masked by Travis'
  # default venv, so we gotta hardcode it.
  - "virtualenv alt_env --python=$([[ $TRAVIS_PYTHON_VERSION == 2* ]] && echo python3 || echo /usr/bin/python)"
  - alt_env/bin/pip install wheel
before_script:
  # Create passworded sudoable user for sudo autoresponse testing. Put it in
  # the Travis user's group so it can read /home/travis for virtualenv etc.
  - sudo useradd sudouser -G travis
  - "echo sudouser:mypass | sudo chpasswd"
  - "sudo sh -c \"echo 'sudouser   ALL=(ALL:ALL) PASSWD:ALL' > /etc/sudoers.d/passworded\""
  # Make sure sudouser can write to travis' homedir (used for some config
  # tests)
  - sudo chmod g+w /home/travis
script:
  # Run unit and integration tests, generating coverage report (skipping html).
  # NOTE: Using the above-created passworded sudo-capable user so that
  # sudo-related integration tests work as expected. (Otherwise, sudo prompt
  # response will not be properly tested!)
  # NOTE: This command will fail if the tests fail.
  - "sudo -u sudouser bash -c \"source $VIRTUAL_ENV/bin/activate && inv coverage --no-html\""
  # Websites build OK? (Not on PyPy3, Sphinx is all "who the hell are you?" =/
  - "[[ $TRAVIS_PYTHON_VERSION != 'pypy3' ]] && inv sites"
  # Doctests in websites OK?
  - inv www.doctest
  # Did we break setup.py?
  - pip uninstall -y invoke # To undo the implicit -e install from above
  - pip install . # NO -e!
  - inv -l # Sanity check
  # I have this in my git pre-push hook, but contributors probably don't
  - flake8
  # Test distribution builds.
  # Have to use env var to override our normal config defaults. Ho hum.
  # Also specify the virtualenv we made for the 'alternate' Python version, for
  # the dual wheel build step.
  - "INVOKE_PACKAGING_SIGN=0 inv release.publish --dry-run --directory=tmp --alt-python=alt_env/bin/python"
  # Interpreter-specific wheel
  - pip uninstall -y invoke
  - "if [[ $TRAVIS_PYTHON_VERSION == 3* || $TRAVIS_PYTHON_VERSION == pypy3 ]]; then pip install tmp/dist/*py3*.whl; fi"
  - "if [[ $TRAVIS_PYTHON_VERSION == 2* || $TRAVIS_PYTHON_VERSION == pypy ]]; then pip install tmp/dist/*py2*.whl; fi"
  - inv -l
  # Source distribution
  - pip uninstall -y invoke
  - "pip install tmp/dist/*.tar.gz"
  - inv -l
after_success:
  # Upload coverage data to codecov
  - codecov
notifications:
  irc:
    channels: "irc.freenode.org#invoke"
    template:
      - "%{repository}@%{branch}: %{message} (%{build_url})"
    on_success: change
    on_failure: change
  email: false
